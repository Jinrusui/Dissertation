system:
  seed: 42
  log_level: INFO
  log_dir: logs/
vlm:
  model_key: gpt4o
  model_name: gpt-4o
  temperature: 1.0
  num_plans: 3
  plan_horizon: 5
  action_placeholders: action1, action2, ..., action{plan_horizon}
  plan_placeholders: ',...more plans up to {num_plans} total...'
  system_message: "You are a game playing assistant for Atari Breakout. You will be\
    \ provided with the current game state as an image. Your task is to generate {num_plans}\
    \ alternative action plans, each consisting of {plan_horizon} steps. For each\
    \ plan, explain your reasoning and predict what will happen. The available actions\
    \ are: 0 (NOOP), 1 (FIRE), 2 (RIGHT), 3 (LEFT). Format your response as a JSON\
    \ with the following structure: {{\n  \"reasoning\": \"your overall reasoning\
    \ about the game state\",\n  \"plans\": [\n    {{\n      \"actions\": [{action_placeholders}],\n\
    \      \"explanation\": \"why this sequence of actions makes sense\",\n      \"\
    expected_outcome\": \"what you expect to happen if these actions are executed\"\
    \n    }}\n    {plan_placeholders}\n  ]\n}}\n"
common:
  device: cpu
  sequence_length: ${world_model.max_blocks}
environment:
  name: Breakout
paths:
  atari_gpt_path: ${hydra:runtime.cwd}/atari_gpt
  iris_path: ${hydra:runtime.cwd}/iris
  results_dir: results/
  checkpoint_dir: checkpoints/
tokenizer:
  _target_: iris.src.models.tokenizer.Tokenizer
  vocab_size: 512
  embed_dim: 512
  encoder:
    _target_: iris.src.models.tokenizer.Encoder
    config:
      _target_: iris.src.models.tokenizer.EncoderDecoderConfig
      resolution: 64
      in_channels: 3
      z_channels: 512
      ch: 64
      ch_mult:
      - 1
      - 1
      - 1
      - 1
      - 1
      num_res_blocks: 2
      attn_resolutions:
      - 8
      - 16
      out_ch: 3
      dropout: 0.0
  decoder:
    _target_: iris.src.models.tokenizer.Decoder
    config: ${..encoder.config}
world_model:
  _target_: iris.src.models.TransformerConfig
  tokens_per_block: 17
  max_blocks: 20
  attention: causal
  num_layers: 10
  num_heads: 4
  embed_dim: 256
  embed_pdrop: 0.1
  resid_pdrop: 0.1
  attn_pdrop: 0.1
